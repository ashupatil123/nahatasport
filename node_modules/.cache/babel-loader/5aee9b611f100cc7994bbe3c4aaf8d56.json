{"ast":null,"code":"var _s = $RefreshSig$();\n\n/*eslint-disable*/\nimport React from \"react\"; // core components\n\nimport { Card, Container, Row, Col, Carousel, CarouselItem, CarouselIndicators, CarouselCaption } from \"reactstrap\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst items = [{//src: require(\"assets/img/Nahata-Sport.png\").default,\n}, {//src: require(\"assets/img/Nahata-Sport2.png\").default,\n}, {//src: require(\"assets/img/Nahata-Sport.png\").default,\n}];\n\nfunction IndexHeader() {\n  _s();\n\n  const [activeIndex, setActiveIndex] = React.useState(0);\n  const [animating, setAnimating] = React.useState(false);\n\n  const onExiting = () => {\n    setAnimating(true);\n  };\n\n  const onExited = () => {\n    setAnimating(false);\n  };\n\n  const next = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;\n    setActiveIndex(nextIndex);\n  };\n\n  const previous = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;\n    setActiveIndex(nextIndex);\n  };\n\n  const goToIndex = newIndex => {\n    if (animating) return;\n    setActiveIndex(newIndex);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_s(IndexHeader, \"FYd3Lqf74+dQScd+D3/2SfzV0cE=\");\n\n_c = IndexHeader;\nexport default IndexHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"IndexHeader\");","map":{"version":3,"sources":["D:/Mahavir/src/components/Headers/IndexHeader.js"],"names":["React","Card","Container","Row","Col","Carousel","CarouselItem","CarouselIndicators","CarouselCaption","items","IndexHeader","activeIndex","setActiveIndex","useState","animating","setAnimating","onExiting","onExited","next","nextIndex","length","previous","goToIndex","newIndex"],"mappings":";;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SACEC,IADF,EAEEC,SAFF,EAGEC,GAHF,EAIEC,GAJF,EAKEC,QALF,EAMEC,YANF,EAOEC,kBAPF,EAQEC,eARF,QASO,YATP;;;AAWA,MAAMC,KAAK,GAAG,CACZ,CACE;AADF,CADY,EAKZ,CACE;AADF,CALY,EASZ,CACE;AADF,CATY,CAAd;;AAiBA,SAASC,WAAT,GAAuB;AAAA;;AACrB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCZ,KAAK,CAACa,QAAN,CAAe,CAAf,CAAtC;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bf,KAAK,CAACa,QAAN,CAAe,KAAf,CAAlC;;AACA,QAAMG,SAAS,GAAG,MAAM;AACtBD,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAFD;;AAGA,QAAME,QAAQ,GAAG,MAAM;AACrBF,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAFD;;AAGA,QAAMG,IAAI,GAAG,MAAM;AACjB,QAAIJ,SAAJ,EAAe;AACf,UAAMK,SAAS,GAAGR,WAAW,KAAKF,KAAK,CAACW,MAAN,GAAe,CAA/B,GAAmC,CAAnC,GAAuCT,WAAW,GAAG,CAAvE;AACAC,IAAAA,cAAc,CAACO,SAAD,CAAd;AACD,GAJD;;AAKA,QAAME,QAAQ,GAAG,MAAM;AACrB,QAAIP,SAAJ,EAAe;AACf,UAAMK,SAAS,GAAGR,WAAW,KAAK,CAAhB,GAAoBF,KAAK,CAACW,MAAN,GAAe,CAAnC,GAAuCT,WAAW,GAAG,CAAvE;AACAC,IAAAA,cAAc,CAACO,SAAD,CAAd;AACD,GAJD;;AAKA,QAAMG,SAAS,GAAIC,QAAD,IAAc;AAC9B,QAAIT,SAAJ,EAAe;AACfF,IAAAA,cAAc,CAACW,QAAD,CAAd;AACD,GAHD;;AAKA,sBACE,qCADF;AAKD;;GA7BQb,W;;KAAAA,W;AA+BT,eAAeA,WAAf","sourcesContent":["\n/*eslint-disable*/\nimport React from \"react\";\n\n// core components\nimport {\n  Card,\n  Container,\n  Row,\n  Col,\n  Carousel,\n  CarouselItem,\n  CarouselIndicators,\n  CarouselCaption,\n} from \"reactstrap\";\n\nconst items = [\n  {\n    //src: require(\"assets/img/Nahata-Sport.png\").default,\n   \n  },\n  {\n    //src: require(\"assets/img/Nahata-Sport2.png\").default,\n \n  },\n  {\n    //src: require(\"assets/img/Nahata-Sport.png\").default,\n  \n  },\n];\n\n\n\nfunction IndexHeader() {\n  const [activeIndex, setActiveIndex] = React.useState(0);\n  const [animating, setAnimating] = React.useState(false);\n  const onExiting = () => {\n    setAnimating(true);\n  };\n  const onExited = () => {\n    setAnimating(false);\n  };\n  const next = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;\n    setActiveIndex(nextIndex);\n  };\n  const previous = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;\n    setActiveIndex(nextIndex);\n  };\n  const goToIndex = (newIndex) => {\n    if (animating) return;\n    setActiveIndex(newIndex);\n  };\n\n  return (\n    <>\n     \n    </>\n  );\n}\n\nexport default IndexHeader;\n"]},"metadata":{},"sourceType":"module"}